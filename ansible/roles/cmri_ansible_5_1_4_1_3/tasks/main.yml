- name: create networks
  shell:
    source /etc/yardstick/openstack.creds;
    export net1_name=test_net1_$RANDOM;
    openstack --insecure network create --share --provider-physical-network physnet --provider-network-type vlan --provider-segment 1507 $net1_name;
    echo $net1_name;
  args:
    executable: /bin/bash
  register: o_create_net
- debug: var=o_create_net.stdout_lines

- name: create subnets
  shell:
    sleep 5;
    source /etc/yardstick/openstack.creds;
    export sub1_name=test_sub1_$RANDOM;
    openstack --insecure subnet create --network '{{ o_create_net.stdout_lines[-1] }}' --allocation-pool start=192.168.1.100,end=192.168.1.200 \
    --gateway 192.168.1.1 --subnet-range 192.168.1.0/24 $sub1_name;
    openstack --insecure subnet show $sub1_name;
    echo $sub1_name;
  args:
    executable: /bin/bash
  register: o_create_sub
- debug: var=o_create_sub.stdout_lines

- name: create VM
  shell:
    sleep 10;
    source /etc/yardstick/openstack.creds;
    export vm1_name=test_vm1_$RANDOM;
    openstack --insecure server create --flavor yardstick-flavor --image centos_yardstick --nic net-id={{ o_create_net.stdout_lines[-1] }} \
    --security-group sg_yardstick --key key_yardstick $vm1_name;
    echo $vm1_name;
  args:
    executable: /bin/bash
  register: o_create_vm
- debug: var=o_create_vm.stdout_lines

- name: create and config router
  shell:
    source /etc/yardstick/openstack.creds;
    export router_name=test_router_$RANDOM;
    openstack --insecure router create $router_name;
    openstack --insecure router set $router_name --external-gateway ext-net;
    openstack --insecure router add subnet $router_name {{ o_create_sub.stdout_lines[-1] }};
    openstack --insecure router show $router_name;
    echo $router_name;
  args:
    executable: /bin/bash
  register: o_create_router
- debug: var=o_create_router.stdout_lines

- name: get VM IP
  shell:
    sleep 40;
    source /etc/yardstick/openstack.creds;
    openstack --insecure server show {{ o_create_vm.stdout_lines[-1] }} | grep address | awk -F '|' '{print $3}' | awk -F "=" '{print $2}' | xargs;
  args:
    executable: /bin/bash
  register: o_vm_ip
- debug: var=o_vm_ip.stdout_lines

- name: floating ip association
  shell:
    source /etc/yardstick/openstack.creds;
    export subnet_id=`openstack --insecure subnet show {{ o_create_sub.stdout_lines[-1] }} | grep ' id ' | awk -F'|' '{print $3}'`;
    export port_id=`openstack --insecure port list | grep $subnet_id |  grep {{ o_vm_ip.stdout_lines[-1] }} | awk -F'|' '{print $2}' | xargs`;
    openstack --insecure floating ip create --port $port_id ext-net | grep 'floating_ip_address' | awk -F'|' '{print $3}' | xargs;
  args:
    executable: /bin/bash
  register: o_create_fip
- debug: var=o_create_fip.stdout_lines

- name: MTU
  ignore_errors: True
  shell:
    source /etc/yardstick/openstack.creds;
    ssh -i /etc/yardstick/ssh/id_rsa -F /etc/yardstick/ssh/ssh_config root@{{ o_create_fip.stdout_lines[-1] }} \
    'echo --------------------------------- ping with MTU 1024 ---------------------------------;
    ping -c 3 -M do -s 1024 192.168.1.1;
    echo --------------------------------- ping with MTU 2048 ---------------------------------;
    ping -c 3 -M do -s 2048 192.168.1.1;
    echo --------------------------------- MTU of eth0 ---------------------------------;
    ifconfig eth0; ';
  args:
    executable: /bin/bash
  register: cmd
- debug: var=cmd.stdout_lines

- name: delete floating ip
  shell:
    source /etc/yardstick/openstack.creds;
    openstack --insecure floating ip delete {{ o_create_fip.stdout_lines[-1] }};
  args:
    executable: /bin/bash

- name: delete router
  shell:
    sleep 40;
    source /etc/yardstick/openstack.creds;
    openstack --insecure router remove subnet {{ o_create_router.stdout_lines[-1] }} {{ o_create_sub.stdout_lines[-1] }};
    openstack --insecure router delete {{ o_create_router.stdout_lines[-1] }};
  args:
    executable: /bin/bash

- name: delete VM
  shell:
    sleep 10;
    source /etc/yardstick/openstack.creds;
    openstack --insecure server delete {{ o_create_vm.stdout_lines[-1] }};
  args:
    executable: /bin/bash

- name: delete subnet
  shell:
    sleep 30;
    source /etc/yardstick/openstack.creds;
    openstack --insecure subnet delete {{ o_create_sub.stdout_lines[-1] }};
  args:
    executable: /bin/bash

- name: delete networks
  shell:
    sleep 10;
    source /etc/yardstick/openstack.creds;
    openstack --insecure network delete {{ o_create_net.stdout_lines[-1] }};
  args:
    executable: /bin/bash





